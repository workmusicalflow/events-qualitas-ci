{# Section de présentation de l'événement #}
<section class="py-20 bg-white" 
         x-data="{ activeTab: 'programme' }"
         x-init="() => {
             gsap.from('.presentation-content', {
                 opacity: 0,
                 y: 30,
                 duration: 1,
                 scrollTrigger: {
                     trigger: '.presentation-content',
                     start: 'top 80%'
                 }
             });
         }">
    <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
            {# Introduction #}
            <div class="presentation-content text-center mb-16">
                <p class="text-2xl text-gray-700 leading-relaxed mb-8">
                    {{ event.presentation.intro }}
                </p>
                <p class="text-xl text-gray-600 mb-12">
                    {{ event.presentation.details }}
                </p>
            </div>

            {# Onglets Programme et Objectif #}
            <div class="grid md:grid-cols-2 gap-8 mb-16">
                {# Programme #}
                <div class="bg-blue-50 p-8 rounded-md transform hover:scale-[1.02] transition-transform duration-300"
                     x-show="activeTab === 'programme'"
                     x-transition:enter="transition ease-out duration-300"
                     x-transition:enter-start="opacity-0 transform translate-x-4"
                     x-transition:enter-end="opacity-100 transform translate-x-0">
                    <h3 class="text-xl font-bold text-blue-900 mb-6 flex items-center">
                        <i class="fas fa-calendar-check mr-2"></i>Au programme
                    </h3>
                    <ul class="space-y-4">
                        {% for item in event.presentation.programme %}
                            <li class="flex items-start animate-fade-in" style="animation-delay: {{ loop.index0 * 150 }}ms">
                                <i class="fas fa-check-circle text-green-500 mt-1 mr-3"></i>
                                <span class="text-gray-700">{{ item }}</span>
                            </li>
                        {% endfor %}
                    </ul>
                </div>

                {# Objectif #}
                <div class="bg-green-50 p-8 rounded-md transform hover:scale-[1.02] transition-transform duration-300"
                     x-show="activeTab === 'objectif'"
                     x-transition:enter="transition ease-out duration-300"
                     x-transition:enter-start="opacity-0 transform translate-x-4"
                     x-transition:enter-end="opacity-100 transform translate-x-0">
                    <h3 class="text-xl font-bold text-green-900 mb-6 flex items-center">
                        <i class="fas fa-bullseye mr-2"></i>Notre objectif
                    </h3>
                    <p class="text-gray-700 leading-relaxed">{{ event.presentation.objectif }}</p>
                </div>
            </div>

            {# Bouton d'action #}
            <div class="text-center">
                <a href="https://events-qualitas-ci.com/formulaire.html" 
                   class="inline-flex items-center bg-blue-900 hover:bg-blue-800 text-white font-bold py-3 px-6 rounded-md transition-all duration-300 hover:shadow-lg transform hover:-translate-y-1">
                    <i class="fas fa-id-badge mr-2"></i>
                    <span>Générer mon badge de visite</span>
                </a>
            </div>
        </div>
    </div>
</section>

{# Styles spécifiques au composant #}
{% block component_styles %}
<style>
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
    }

    @media (prefers-reduced-motion: reduce) {
        .animate-fade-in {
            animation: none;
            opacity: 1;
        }
    }
</style>
{% endblock %}

{# Scripts spécifiques au composant #}
{% block component_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Animation des éléments au scroll
        gsap.utils.toArray('.presentation-content > *').forEach((elem, i) => {
            gsap.from(elem, {
                opacity: 0,
                y: 20,
                duration: 0.8,
                delay: i * 0.2,
                scrollTrigger: {
                    trigger: elem,
                    start: 'top 80%'
                }
            });
        });
    });
</script>
{% endblock %}